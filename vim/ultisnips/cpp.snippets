snippet googlemain "main function with glog & gflags"
#include <glog/logging.h>

int main(int argc, char* argv[]) {
  FLAGS_minloglevel = google::INFO;
  FLAGS_logtostderr = true;
  FLAGS_colorlogtostderr = true;

  google::InitGoogleLogging(argv[0]);
  google::ParseCommandLineFlags(&argc, &argv, true);
}
endsnippet

snippet class "new class with copy and move constructor deleted"
class ${1:MyClass} {
   public:
    $1();
    ~$1();

   public:
    // copy constructors
    $1(const $1& other) = delete;
    $1& operator=(const $1& other) = delete;
    // move constructors
    $1($1&& other) = delete;
    $1& operator=($1&& other) = delete;
};
endsnippet

snippet func_call "Display msg with function enter and exit"
#define FUNC_CALL() TracerT _token(__func__)
struct TracerT {
    char const* fname_;
    TracerT(char const* fname) : fname_(fname) {
        std::cout << "-- ***** " << fname_ << " ***** --" << std::endl;
    }
    ~TracerT() {
        std::cout << "== ***** " << fname_ << " ***** ==" << std::endl;
    }
};
endsnippet

snippet cv_window "main function with glog & gflags"
  cv::namedWindow("display", cv::WINDOW_NORMAL | cv::WINDOW_KEEPRATIO);
  cv::resizeWindow("display", 1920, 1080);
endsnippet
